@page "/servers/{id:int}"

<h3>EditServer</h3>

@if (Server != null)
{

    <EditForm Model="Server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="Server.ServerId" hidden />

        <div class="mb-3">
            <label class="form-label">Name</label>
            <InputText @bind-Value="Server.Name" class="form-control" />
            <div>
                <ValidationMessage For="() => Server.Name"/>
            </div>
        </div>
        <div class="mb-3">
            <label class="form-label">City</label>
            <InputText @bind-Value="Server.City" class="form-control" />
            <div>
                <ValidationMessage For="() => Server.City" />
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Status</label>
            <InputCheckbox @bind-Value="Server.IsOnline" class="form-check-input" />
        </div>

        <br />

        <a href="/servers" class="btn btn-primary me-2">Back</a>

        <button class="btn btn-primary" type="submit">Update</button>

    </EditForm>
}


@code {

    [Parameter]
    public int Id { get; set; }


    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? Server { get; set; }


    protected override void OnParametersSet()
    {
        Server ??= ServersRepository.GetServerById(Id);
    }

    private void Submit()
    {
        if(Server != null)
        {
            ServersRepository.UpdateServer(Server.ServerId, Server);
        }
    }
}
